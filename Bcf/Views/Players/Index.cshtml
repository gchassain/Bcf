@using Bcf.ViewModels
@model IEnumerable<IndexPlayerViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="row bcf-title-bar">
    <div class="col-6">
        <span class="bcf-title">JOUEURS</span>
    </div>
    <div class="col-6 text-right">
        <form asp-controller="Players" asp-action="Index" method="get" class="bcf-search-input">
            <input type="text" name="SearchString" placeholder="Rechercher par nom">
            <input type="submit" value="Filtrer" />
        </form>
    </div>
</div>

<div class="col-12">
    <table class="table table-striped border">
        <thead>
            <tr class="table-info">
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Position)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Height)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Weight)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in Model)
            {
                <tr>
                    <td class="bcf-player-left">
                        <a href="@Url.Action("Details", "Players", new { Id = player.Id })">
                            <img src="@Url.Content("~/images/" + @player.ProfilePicture)" class="rounded-circle player-picture-thumb ng-isolate-scope" asp-append-version="true" />
                        </a>
                        <a href="@Url.Action("Details", "Players", new { Id = player.Id })" class="bcf-player-name ng-isolate-scope">
                            @Html.DisplayFor(modelItem => player.FirstName)
                            @Html.DisplayFor(modelItem => player.LastName)
                        </a>
                        @*
        @Html.ActionLink(player.FirstName, "Details", "Players", new { Id = player.Id }, new { @class = "bcf-player-name ng-isolate-scope" })
        @Html.ActionLink(player.LastName, "Details", "Players", new { Id = player.Id }, new { @class = "bcf-player-name ng-isolate-scope" })
                        *@
                    </td>
                    <td class="bcf-player-left">
                        @Html.DisplayFor(modelItem => player.Number)
                    </td>
                    <td class="bcf-player-left">
                        @Html.DisplayFor(modelItem => player.Position)
                    </td>
                    <td class="bcf-player-left">
                        @Html.DisplayFor(modelItem => player.Height)
                    </td>
                    <td class="bcf-player-left">
                        @Html.DisplayFor(modelItem => player.Weight)
                    </td>
                    <td class="bcf-player-left">
                        <div class="btn-group" role="group" aria-label="Options">
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@player.Id">Editer</a>
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@player.Id">Infos</a>
                            <a class="btn btn-primary" asp-action="Delete" asp-route-id="@player.Id">Supprimer</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="col-6 text-right">
        <a class="btn btn-info" asp-action="Create">Ajouter un joueur</a>
    </div>
</div>